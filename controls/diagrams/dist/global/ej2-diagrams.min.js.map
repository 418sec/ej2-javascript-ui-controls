{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-mapping.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram/custom-cursor.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/interaction/line-routing.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Bpmn':\n                return BpmnFlow;\n            case 'UmlActivity':\n                return ActivityFlow;\n            case 'UmlClassifier':\n                return RelationShip;\n            default:\n                return ConnectorShape;\n        }\n    }\n    return ConnectorShape;\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Straight':\n                return StraightSegment;\n            case 'Bezier':\n                return BezierSegment;\n            case 'Orthogonal':\n                return OrthogonalSegment;\n            default:\n                return StraightSegment;\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if ((!diagram.currentSymbol) && (checkParentAsContainer(diagram, object) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 || shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            var undoObj = cloneObject(shape.lanes[laneIndex]);\n            removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                    redoObject: cloneObject(lane), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            shape.lanes.splice(laneIndex, 1);\n            var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                (findStartLaneIndex(swimLane) + laneIndex);\n            if (shape.orientation === 'Horizontal') {\n                row = grid.rows[index];\n                for (i = 0; i < row.cells.length; i++) {\n                    cell = row.cells[i];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeRow(index);\n            }\n            else {\n                swimLane.width = (swimLane.width !== undefined) ?\n                    swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                for (i = 0; i < grid.rows.length; i++) {\n                    cell = grid.rows[i].cells[index];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeColumn(index);\n            }\n            swimLane.width = swimLane.wrapper.width = grid.width;\n            swimLane.height = swimLane.wrapper.height = grid.height;\n            swimLaneMeasureAndArrange(swimLane);\n            ChangeLaneIndex(diagram, swimLane, index);\n            diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            switch (child.shape.flow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            switch (child.shape.flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(this.currentTarget);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target }, position: this.currentPosition, cancel: false\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nvar getShapeType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Basic':\n                return BasicShape;\n            case 'Flow':\n                return FlowShape;\n            case 'Path':\n                return Path;\n            case 'Image':\n                return Image;\n            case 'Text':\n                return Text;\n            case 'Bpmn':\n                return BpmnShape;\n            case 'Native':\n                return Native;\n            case 'HTML':\n                return Html;\n            case 'UmlActivity':\n                return UmlActivityShape;\n            case 'UmlClassifier':\n                return UmlClassifierShape;\n            case 'SwimLane':\n                return SwimLane;\n            default:\n                return BasicShape;\n        }\n    }\n    return BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                parentHtmlElement.appendChild(htmlElement);\n                canvas.appendChild(parentHtmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    getHTMLLayer(this.diagramId).children[0];\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    arg = {\n                        source: cloneBlazorObject(args.source), state: 'Completed',\n                        oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                        target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                        allowDrop: arg.allowDrop, cancel: arg.cancel\n                    };\n                    if (isBlazor()) {\n                        arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                    }\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                if (isBlazor) {\n                    arg = getDropEventArguements(args, arg);\n                }\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isBlazor()) {\n            arg = this.getBlazorPositionChangeEventArgs(arg, args.target);\n        }\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        if (!arg1.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        if (arg1.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (currentAction === this.diagram.selectedItems.userHandles[i].name) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    this.diagram.triggerEvent(eventName, arg);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor()) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            } || isBlazor())) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: cloneBlazorObject(target),\n            element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n            actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n        };\n        if (isBlazor()) {\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                arg = {\n                    source: { selector: cloneBlazorObject(obj) } || { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        obj.offsetX = helperObject.offsetX;\n                        obj.offsetY = helperObject.offsetY;\n                        if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                            obj.width = helperObject.width;\n                            obj.height = helperObject.height;\n                        }\n                        obj.rotateAngle = helperObject.rotateAngle;\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                    }\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } }\n            };\n        }\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changed', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint,\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                    node.offsetX = node.wrapper.offsetX;\n                }\n                if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                    node.offsetY = node.wrapper.offsetY;\n                }\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: 'Changing', type: 'Addition', cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(obj, arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        if (isBlazor()) {\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n        }\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: cloneBlazorObject(oldValue ? oldValue : []),\n                newValue: cloneBlazorObject(this.getSelectedObject()),\n                cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n            };\n            this.updateBlazorSelectorModel(oldValue);\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue);\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (isBlazor()) {\n                arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n            }\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(arrayNodes, true);\n            if (triggerAction) {\n                if (isBlazor()) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                }\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n            this.updateSelector();\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                updateDefaultValues(node, child, _this.connectorDefaults);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                newValue: cloneBlazorObject(newProp.nodes[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { node: cloneBlazorObject(actualObject) };\n                                args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                args.newValue = { node: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                newValue: cloneBlazorObject(newProp.connectors[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { connector: cloneBlazorObject(actualObject) };\n                                args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                args.newValue = { connector: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = {\n                element: cloneBlazorObject(this), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args.element = { diagram: cloneBlazorObject(this) };\n                args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                args.newValue = { diagram: cloneBlazorObject(newValue) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                        view.updateHtmlLayer(view);\n                    }\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n        this.renderComplete();\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change)\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            this.historyManager.startGroupAction();\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            this.historyManager.endGroupAction();\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param obj Defines the node that has to be added to diagram\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param obj Defines the connector that has to be added to diagram\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(currentObj.id + '_html_element', elementId);\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            if (isBlazor()) {\n                node = this.nameTable[node.id] || node;\n            }\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            if (nodes_1.length > 0) {\n                this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n            }\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            var updatedNodes = nodes;\n            for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                var obj = updatedNodes_1[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                var conn = _b[_a];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor()) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                source: cloneBlazorObject(this)\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.updateQuad(this.nodes[i]);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if (layer === undefined || (layer && layer.visible)) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    this.updateDiagramObject(actualObject);\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldObject), newValue: cloneBlazorObject(node)\n            };\n            if (isBlazor()) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = void 0;\n                arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(_this.droppable[source]),\n                        element: getObjectType(_this.currentSymbol) === Connector ? { connector: cloneBlazorObject(_this.currentSymbol) } : { node: cloneBlazorObject(_this.currentSymbol) },\n                        cancel: false,\n                        position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: cloneBlazorObject(args.droppedElement),\n                    element: undefined,\n                    target: cloneBlazorObject(_this.eventHandler['hoverNode'] || (_this.eventHandler['lastObjectUnderMouse']) || _this), cancel: false,\n                    position: undefined\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(args.droppedElement),\n                        element: undefined,\n                        cancel: false,\n                        position: undefined,\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, {\n                    element: cloneBlazorObject(_this.currentSymbol), diagram: cloneBlazorObject(_this)\n                });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagram = cloneBlazorObject(this);\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagram: cloneBlazorObject(this)\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'] - this.size;\n        var top = diagram.spatialSearch['pageTop'] - this.size;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    grid_1.nodeId = [];\n                    grid_1.walkable = true;\n                }\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                // x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.LineRouting, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canEnableRouting","state","LineRouting","InheritLineRouting","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","prevChild","phaseRowIndex","prevHeight","laneHeader","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","setConnectorDefaults","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getCollectionChangeEventArguements","args1","isBlazor","cause","cancel","cloneBlazorObject","getDropEventArguements","arg","currentTarget","currentPosition","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","template","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","templatePosition","getAvailableSize","Port","Complex","Connect","Hyperlink","Annotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","getBlazorPositionChangeEventArgs","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseEnter","isScrolling","preventDefault","onUserHandleMouseDown","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","isSwimlaneElements","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","onUserHandleMouseUp","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","updateSelectedNodeProperties","renderSelector","getBlazorClickEventArgs","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","movingPosition","autoScrollBorder","delay","autoScroll","targets","getBlazorCollectionObject","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","connectorTargetValue","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","defaultConnector","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","updateHtmlLayer","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","sourceValue","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","updateEventValue","addNodeToLane","laneId","hideTooltip","addNode","addConnector","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","updateSvgNodes","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","nodesCollection","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","layoutInfo","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.LineRouting","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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AUwQ,aAAe,WACnC,GAAI25C,GAAah3D,UAAQi3D,gBACrBC,EAAYl3D,UAAQm3D,cACpBC,EAAYp3D,UAAQq3D,cACNr3D,WAAQu3D,SAG1BG,gBAAanxE,OAAO3e,KAAKxS,QAAS4hG,EAAYpvF,KAAKq1D,WACnDy6B,eAAanxE,OAAO3e,KAAKxS,QAASgiG,EAAWxvF,KAAK01D,WAClDo6B,eAAanxE,OAAO3e,KAAKxS,QAAS8hG,EAAWtvF,KAAK21D,SAClDm6B,eAAanxE,OAAO3e,KAAKxS,QALV,QAK6BwS,KAAKkzI,OACjDpjD,eAAanxE,OAAOvc,SALD,UAKyBpC,KAAKkqE,UAErDvkC,IACImB,WAAS,MACVynG,EAActpG,UAAW,gBAAa,IACzCU,IACImB,WAAS,SACVynG,EAActpG,UAAW,YAAS,IACrCU,IACImB,WAAS,SACVynG,EAActpG,UAAW,aAAU,IACtCU,IACIqC,gBAAeqmG,KAChBE,EAActpG,UAAW,eAAY,IACxCU,IACImB,cACDynG,EAActpG,UAAW,oBAAiB,IAC7CU,IACImB,cACDynG,EAActpG,UAAW,iBAAc,IAC1CU,IACImB,cACDynG,EAActpG,UAAW,oBAAiB,IAC7CU,IACImB,cACDynG,EAActpG,UAAW,4BAAyB,IACrDU,IACImB,cACDynG,EAActpG,UAAW,wBAAqB,IACjDU,IACImB,cACDynG,EAActpG,UAAW,kBAAe,IAC3CU,IACImB,cACDynG,EAActpG,UAAW,mBAAgB,IAC5CU,IACIwH,WAAUt9C,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAAM+3C,KACvDymG,EAActpG,UAAW,mBAAgB,IAC5CU,IACImB,YAAS,IACVynG,EAActpG,UAAW,gBAAa,IACzCU,IACIwH,aAAYmhG,KACbC,EAActpG,UAAW,oBAAiB,IAC7CU,IACImB,YAAS,IACVynG,EAActpG,UAAW,mBAAgB,IAC5CU,IACImB,YAAS,IACVynG,EAActpG,UAAW,sBAAmB,IAC/CU,IACImB,WAAS,aACVynG,EAActpG,UAAW,iBAAc,IAC1CU,IACIkhE,WACD0nC,EAAc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"}