{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = void 0;\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode) {\n    var laneIndex = findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane) {\n    var shape = swimLane.shape;\n    if (shape.lanes.length === 1) {\n        diagram.remove(swimLane);\n    }\n    else {\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        var row = void 0;\n        var i = void 0;\n        var cell = void 0;\n        var j = void 0;\n        var child = void 0;\n        var grid = swimLane.wrapper.children[0];\n        var laneIndex = findLaneIndex(swimLane, lane);\n        var undoObj = cloneObject(shape.lanes[laneIndex]);\n        removeLaneChildNode(diagram, swimLane, lane);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                redoObject: cloneObject(lane), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        shape.lanes.splice(laneIndex, 1);\n        if (shape.orientation === 'Horizontal') {\n            row = grid.rows[lane.rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeRow(lane.rowIndex);\n        }\n        else {\n            swimLane.width = (swimLane.width !== undefined) ?\n                swimLane.width - grid.rows[0].cells[lane.columnIndex].actualSize.width : swimLane.width;\n            for (i = 0; i < grid.rows.length; i++) {\n                cell = grid.rows[i].cells[lane.columnIndex];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeColumn(lane.columnIndex);\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        ChangeLaneIndex(diagram, swimLane, lane.rowIndex);\n        diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phase.columnIndex];\n            prevCell = (row.cells.length - 1 === phase.columnIndex) ? row.cells[phase.columnIndex - 1] :\n                row.cells[phase.columnIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phase.columnIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phase.columnIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    grid.removeColumn(phase.columnIndex);\n    if ((phase.columnIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phase.columnIndex].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phase.columnIndex - 1].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    row = grid.rows[phase.rowIndex];\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phase.rowIndex - 1] : grid.rows[phase.rowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    grid.removeRow(phase.rowIndex);\n    if ((phase.rowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phase.rowIndex].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phase.rowIndex - 1].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className) {\n    var elements = document.getElementsByClassName(className);\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = element.diagramId + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.pointChangeParameter = {};\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var newValue = void 0;\n            var oldValue = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            this.pointChangeParameter = { args: args, targetPortId: targetPortId, targetNodeId: targetNodeId };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg, this.onSuccessPointChange.bind(this));\n            }\n            else {\n                this.onSuccessPointChange(arg);\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectTool.prototype.onSuccessPointChange = function (arg) {\n        var argsChar = 'args';\n        var args = this.pointChangeParameter[argsChar];\n        var targetPortIdChar = 'targetPortId';\n        var targetPortId = this.pointChangeParameter[targetPortIdChar];\n        var targetNodeIdChar = 'targetNodeId';\n        var targetNodeId = this.pointChangeParameter[targetNodeIdChar];\n        var diffX = this.currentPosition.x - this.prevPosition.x;\n        var diffY = this.currentPosition.y - this.prevPosition.y;\n        var inPort;\n        var outPort;\n        if (args.target) {\n            inPort = getInOutConnectPorts(args.target, true);\n            outPort = getInOutConnectPorts(args.target, false);\n        }\n        if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n            this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n            this.commandHandler.updateSelector();\n            if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                }\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                if (target instanceof Node) {\n                    if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                        || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                        this.commandHandler.connect(this.endPoint, args);\n                    }\n                }\n                else {\n                    var isConnect = this.checkConnect(target);\n                    if (isConnect) {\n                        this.commandHandler.connect(this.endPoint, args);\n                    }\n                }\n            }\n            else if (this.endPoint.indexOf('Bezier') === -1) {\n                this.commandHandler.disConnect(args.source, this.endPoint);\n                this.commandHandler.updateSelector();\n            }\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.position);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.rotateEventArgs = {};\n        return _this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.rotateEventArgs = { angle: angle, object: object };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg, this.successRotateEvent.bind(this));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    RotateTool.prototype.successRotateEvent = function (arg) {\n        if (!arg.cancel) {\n            var angleChar = 'angle';\n            var objectChar = 'object';\n            this.blocked = !(this.commandHandler.rotateSelectedItems(this.rotateEventArgs[angleChar] - this.rotateEventArgs[objectChar].wrapper.rotateAngle));\n        }\n        return null;\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        /**   @private  */\n        _this.sizeChangeParameters = {};\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.sizeChangeParameters = { 'deltaWidth': deltaWidth, 'deltaHeight': deltaHeight };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg, this.sizeChangeSuccessCallback.bind(this));\n        return this.blocked;\n    };\n    ResizeTool.prototype.sizeChangeSuccessCallback = function (arg) {\n        if (arg.cancel) {\n            var deltaHeight = 'deltaHeight';\n            var deltaWidth = 'deltaWidth';\n            this.commandHandler.scaleSelectedItems(1 / this.sizeChangeParameters[deltaWidth], 1 / this.sizeChangeParameters[deltaHeight], this.getPivot(this.corner));\n        }\n        this.sizeChangeParameters = {};\n        return null;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj.shape.type === 'SwimLane') {\n                connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n            }\n            if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                    this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                    target = this.diagram.getObject(target.parentId);\n                }\n            }\n            if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                target.container && target.container.type === 'Canvas' && target.isLane &&\n                obj.isLane && target.parentId === obj.parentId) {\n                laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                history.isPreventHistory = true;\n            }\n            else {\n                var parentNode = this.diagram.nameTable[obj.parentId];\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    obj.offsetX = helperObject.offsetX;\n                    obj.offsetY = helperObject.offsetY;\n                    if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                        obj.width = helperObject.width;\n                        obj.height = helperObject.height;\n                    }\n                    obj.rotateAngle = helperObject.rotateAngle;\n                }\n                var undoElement = void 0;\n                if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                    this.diagram.startGroupAction();\n                    hasGroup = true;\n                }\n                if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                    var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                    undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                    if (index > -1) {\n                        var children = parentNode.children;\n                        children.splice(children.indexOf(obj.id), 1);\n                        this.diagram.nameTable[obj.id].parentId = '';\n                        hasStack = true;\n                        parentNode.wrapper.children.splice(index, 1);\n                    }\n                }\n                moveChildInStack(obj, target, this.diagram, this.action);\n                parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                    (this.diagram.nameTable[obj.parentId] || obj);\n                if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                    parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                    parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                    isChangeProperties = true;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                }\n                if (obj.shape.lanes) {\n                    this.updateLaneChildNode(obj);\n                }\n                if (isChangeProperties) {\n                    parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                    parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                }\n                if (hasStack) {\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    var entry = {\n                        type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                        undoObject: undoElement, category: 'Internal'\n                    };\n                    if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                        this.diagram.addHistoryEntry(entry);\n                    }\n                }\n                if (obj && obj.container && (obj.container.type === 'Stack' ||\n                    (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                    });\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = false;\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, this.diagram);\n            history.hasStack = hasGroup;\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.connectionChangeEvent = {};\n        this.connectionChange = {};\n        this.connectionChangeConnect = {};\n        /**\n         * @private\n         */\n        this.selectObjectParameters = {};\n        this.onClearSelectionParameters = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args, onSuccessCallBack, onFailureCallback) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args, onSuccessCallBack, onFailureCallback);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.connectionChangeEvent = { connector: connector, oldChanges: oldChanges, newChanges: newChanges, endPoint: endPoint };\n                this.triggerEvent(DiagramEvent.connectionChange, arg, this.successDisconnect.bind(this));\n            }\n        }\n    };\n    CommandHandler.prototype.successDisconnect = function (arg) {\n        var conn = 'connector';\n        var old = 'oldChanges';\n        var char = 'newChanges';\n        var end = 'endPoint';\n        var connector = this.connectionChangeEvent[conn];\n        var oldChanges = this.connectionChangeEvent[old];\n        var newChanges = this.connectionChangeEvent[char];\n        var endPoint = this.connectionChangeEvent[end];\n        if (arg.cancel) {\n            connector.sourceID = oldChanges.sourceID;\n            connector.sourcePortID = oldChanges.sourcePortID;\n            connector.targetID = oldChanges.targetID;\n            connector.targetPortID = oldChanges.targetPortID;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: oldChanges,\n                newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.connectionChange = {\n            connector: connector, oldChanges: oldChanges, newChanges: newChanges,\n            endPoint: endPoint, nodeEndId: nodeEndId, portEndId: portEndId\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg, this.successConnectionChange.bind(this));\n    };\n    CommandHandler.prototype.successConnectionChange = function (arg) {\n        var connChar = 'connector';\n        var oldChar = 'oldChanges';\n        var newChar = 'newChanges';\n        var endChar = 'endPoint';\n        var nodeChar = 'nodeEndId';\n        var portChar = 'portEndId';\n        var connector = this.connectionChange[connChar];\n        var oldChanges = this.connectionChange[oldChar];\n        var newChanges = this.connectionChange[newChar];\n        var endPoint = this.connectionChange[endChar];\n        var nodeEndId = this.connectionChange[nodeChar];\n        var portEndId = this.connectionChange[portChar];\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.connectionChangeConnect = {\n                connector: connector, oldChanges: oldChanges, newChanges: newChanges,\n                endPoint: endPoint, oldNodeId: oldNodeId, oldPortId: oldPortId,\n                nodeEndId: nodeEndId, portEndId: portEndId\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg, this.successConnect.bind(this));\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    CommandHandler.prototype.successConnect = function (arg) {\n        var connSuccess = 'connector';\n        var oldSuccess = 'oldChanges';\n        var charSuccess = 'newChanges';\n        var endSuccess = 'endPoint';\n        var nodeEndSuccess = 'nodeEndId';\n        var portEndSuccess = 'portEndId';\n        var oldNodeSuccess = 'oldNodeId';\n        var oldPortSuccess = 'oldPortId';\n        var connector = this.connectionChangeConnect[connSuccess];\n        var oldChanges = this.connectionChangeConnect[oldSuccess];\n        var newChanges = this.connectionChangeConnect[charSuccess];\n        var endPoint = this.connectionChangeConnect[endSuccess];\n        var nodeEndId = this.connectionChangeConnect[nodeEndSuccess];\n        var portEndId = this.connectionChangeConnect[portEndSuccess];\n        var oldNodeId = this.connectionChangeConnect[oldNodeSuccess];\n        var oldPortId = this.connectionChangeConnect[oldPortSuccess];\n        if (arg.cancel) {\n            connector[nodeEndId] = oldNodeId;\n            connector[portEndId] = oldPortId;\n            newChanges[nodeEndId] = oldNodeId;\n            newChanges[portEndId] = oldPortId;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        this.selectObjectParameters = { oldValue: oldValue, multipleSelection: multipleSelection, obj: obj };\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg, this.selectObjectSuccess.bind(this));\n    };\n    CommandHandler.prototype.selectObjectSuccess = function (arg) {\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var select = true;\n        var objChar = 'obj';\n        var multipleSelectionChar = 'multipleSelection';\n        var oldValueChar = 'oldValue';\n        var obj = this.selectObjectParameters[objChar];\n        var multipleSelection = this.selectObjectParameters[multipleSelectionChar];\n        var oldValue = this.selectObjectParameters[oldValueChar];\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            this.onClearSelectionParameters = {};\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.onClearSelectionParameters = { arrayNodes: arrayNodes, triggerAction: triggerAction };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg, this.onClearSelectionSuccess.bind(this));\n            }\n            else {\n                this.onClearSelectionSuccess(arg);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.onClearSelectionSuccess = function (arg) {\n        var selectormodel = this.diagram.selectedItems;\n        var triggerActionChar = 'triggerAction';\n        var triggerAction = this.onClearSelectionParameters[triggerActionChar];\n        var arrayNodesChar = 'arrayNodes';\n        var arrayNodes = this.onClearSelectionParameters[arrayNodesChar];\n        if (!arg.cancel) {\n            selectormodel.offsetX = 0;\n            selectormodel.offsetY = 0;\n            selectormodel.width = 0;\n            selectormodel.height = 0;\n            selectormodel.rotateAngle = 0;\n            selectormodel.nodes = [];\n            selectormodel.connectors = [];\n            selectormodel.wrapper = null;\n            selectormodel.annotation = undefined;\n            this.diagram.clearSelectorLayer();\n            if (triggerAction) {\n                arg = {\n                    oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                    state: 'Changed', type: 'Removal', cancel: false\n                };\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, oldValues, { rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        /** @private */\n        _this.removeCollectionParameters = {};\n        _this.renderTimer = null;\n        _this.textEditEvent = {};\n        /** @private */\n        _this.dragEnterEvent = {};\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.nodes[index],\n                                newValue: newProp.nodes[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.connectors[index],\n                                newValue: newProp.connectors[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = { element: this, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.updateTemplate();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var _this = this;\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                setTimeout(function () {\n                    // tslint:disable-next-line:curly\n                    updateBlazorTemplate(_this.element.id + 'content_diagram', 'Content');\n                    // tslint:disable-next-line:align\n                }, 5);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                setTimeout(function () {\n                    // tslint:disable-next-line:curly\n                    updateBlazorTemplate(_this.element.id + 'template_diagram', 'Template');\n                    // tslint:disable-next-line:align\n                }, 5);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                setTimeout(function () {\n                    // tslint:disable-next-line:curly\n                    updateBlazorTemplate(_this.element.id + 'template_diagram', 'Template');\n                    // tslint:disable-next-line:align\n                }, 5);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var _this = this;\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                setTimeout(function () {\n                    // tslint:disable-next-line:curly\n                    resetBlazorTemplate(_this.element.id + 'content', 'Content');\n                    // tslint:disable-next-line:align\n                }, 5);\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                setTimeout(function () {\n                    // tslint:disable-next-line:curly\n                    resetBlazorTemplate(_this.element.id + 'template', 'Template');\n                    // tslint:disable-next-line:align\n                }, 5);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                setTimeout(function () {\n                    // tslint:disable-next-line:curly\n                    resetBlazorTemplate(_this.element.id + 'template', 'Template');\n                    // tslint:disable-next-line:align\n                }, 5);\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args, onSuccessCallBack, onFailureCallback) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args, onSuccessCallBack, onFailureCallback);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                this.removeCollectionParameters = { groupAction: groupAction, obj: obj, selectedItems: selectedItems };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args, this.onRemoveCollectionChangeSuccess.bind(this));\n                }\n                else\n                    this.onRemoveCollectionChangeSuccess(args);\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    /* tslint:disable */\n    Diagram.prototype.onRemoveCollectionChangeSuccess = function (args) {\n        if (!args.cancel) {\n            var objChart = 'obj';\n            var groupActionChar = 'groupAction';\n            var selectedItemsChar = 'selectedItems';\n            var groupAction = this.removeCollectionParameters[groupActionChar];\n            var obj = this.removeCollectionParameters[objChart];\n            var selectedItems = this.removeCollectionParameters[selectedItemsChar];\n            if (this.bpmnModule) {\n                if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                    this.refreshCanvasLayers();\n                    return;\n                }\n            }\n            if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                (obj instanceof Node || obj instanceof Connector)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                if (!(this.diagramActions & DiagramAction.Clear)) {\n                    if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                        this.historyManager.startGroupAction();\n                        groupAction = true;\n                    }\n                }\n                if (obj instanceof Node) {\n                    this.removeDependentConnector(obj);\n                }\n                if (!obj.isLane && !obj.isPhase) {\n                    if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                        this.addHistoryEntry(entry);\n                    }\n                }\n            }\n            if (obj.children && !obj.isLane && !obj.isPhase) {\n                this.deleteGroup(obj);\n            }\n            if (obj.parentId) {\n                this.deleteChild(obj);\n                if (this.nameTable[obj.parentId] &&\n                    this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                    this.updateDiagramObject(this.nameTable[obj.parentId]);\n                    this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                }\n            }\n            var index = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            var currentObj = this.nameTable[obj.id];\n            if (currentObj instanceof Node) {\n                if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                    this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                }\n                if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                    var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                        this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                    var grid = swimLaneNode.wrapper.children[0];\n                    if (currentObj.isLane) {\n                        removeLane(this, currentObj, swimLaneNode);\n                    }\n                    else if (currentObj.isPhase) {\n                        removePhase(this, currentObj, swimLaneNode);\n                    }\n                }\n                index = this.nodes.indexOf(currentObj);\n                if (index !== -1) {\n                    this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                    this.nodes.splice(index, 1);\n                    this.updateNodeEdges(currentObj);\n                }\n            }\n            else {\n                index = this.connectors.indexOf(currentObj);\n                if (index !== -1) {\n                    this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                    this.connectors.splice(index, 1);\n                }\n                this.updateEdges(currentObj);\n                this.spliceConnectorEdges(obj, true);\n                this.spliceConnectorEdges(obj, false);\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            if (isSelected(this, currentObj)) {\n                this.unSelect(currentObj);\n            }\n            if (!currentObj.isPhase) {\n                this.removeObjectsFromLayer(obj);\n                if (this.currentDrawingObject) {\n                    this.currentDrawingObject.wrapper = undefined;\n                }\n                delete this.nameTable[obj.id];\n                if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                    var parentnode = this.nameTable[currentObj.parentId];\n                    if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                        var swimLaneNode = this.nameTable[parentnode.parentId];\n                        removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                    }\n                }\n                this.removeElements(currentObj);\n                this.updateBridging();\n                if (this.mode !== 'SVG') {\n                    this.refreshDiagramLayer();\n                }\n                if (!(this.diagramActions & DiagramAction.Clear)) {\n                    this.removeFromAQuad(currentObj);\n                    args = {\n                        element: obj, cause: this.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    if (obj.id !== 'helper') {\n                        this.triggerEvent(DiagramEvent.collectionChange, args);\n                    }\n                    this.resetTool();\n                }\n            }\n        }\n        this.removeCollectionParameters = {};\n        return null;\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            this.complexHierarchicalTreeModule.doLayout(nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, 0);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.textEditEvent = { node: node, text: text };\n                        this.triggerEvent(DiagramEvent.textEdit, args, this.successTextEdit.bind(this));\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    Diagram.prototype.successTextEdit = function (args) {\n        var node = 'node';\n        var text = 'text';\n        if (!args.cancel) {\n            this.bpmnModule.updateTextAnnotationContent(this.textEditEvent[node], this.activeLabel, this.textEditEvent[text], this);\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldObject, newValue: node };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ?\n                        this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    Diagram.prototype.successDragEnter = function (arg) {\n        var newObj = arg.element;\n        var headerChar = 'header';\n        var argsChar = 'args';\n        var laneChar = 'lane';\n        var entryTableChar = 'entryTable';\n        var selectedSymbolChar = 'selectedSymbol';\n        var header = this.dragEnterEvent[headerChar];\n        var isHorizontal;\n        var position = this.eventHandler.getMousePosition(this.dragEnterEvent[argsChar].event);\n        var lane = this.dragEnterEvent[laneChar];\n        if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n            var swimLaneObj = arg.element;\n            var laneObj = swimLaneObj.shape.lanes[0];\n            var child1 = void 0;\n            var child2 = void 0;\n            isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n            child1 = this.nameTable[newObj.children[0]];\n            child2 = this.nameTable[newObj.children[1]];\n            if (isHorizontal) {\n                header.width = laneObj.header.width;\n                header.height = laneObj.height;\n                lane.width = laneObj.width - header.width;\n                lane.height = laneObj.height;\n                lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                lane.offsetY = position.y + child2.height / 2;\n            }\n            else {\n                header.width = laneObj.width;\n                header.height = laneObj.header.height;\n                lane.width = laneObj.width;\n                lane.height = laneObj.height - header.height;\n                lane.offsetX = position.x + 5 + child2.width / 2;\n                lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n            }\n            header.offsetX = position.x + 5 + child1.width / 2;\n            header.offsetY = position.y + child1.height / 2;\n            newObj.width = laneObj.width;\n            newObj.height = laneObj.height;\n        }\n        if ((newObj instanceof Node) && newObj.shape.isPhase) {\n            if (isHorizontal) {\n                newObj.height = 1;\n            }\n            else {\n                newObj.width = 1;\n            }\n        }\n        if (!this.activeLayer.lock && !arg.cancel) {\n            this.preventUpdate = true;\n            if (newObj.children) {\n                this.findChild(newObj, this.dragEnterEvent[entryTableChar]);\n            }\n            this.preventUpdate = true;\n            if (newObj.zIndex !== -1) {\n                newObj.zIndex = -1;\n            }\n            this.initObject(newObj, undefined, undefined, true);\n            this.currentSymbol = newObj;\n            if (this.mode !== 'SVG') {\n                this.refreshDiagramLayer();\n            }\n            this.commandHandler.select(newObj);\n            this.eventHandler.mouseDown(this.dragEnterEvent[argsChar].event);\n            this.eventHandler.mouseMove(this.dragEnterEvent[argsChar].event, this.dragEnterEvent[argsChar]);\n            this.preventUpdate = false;\n            this.updatePage();\n            this.dragEnterEvent[selectedSymbolChar].style.opacity = '0';\n        }\n        return null;\n    };\n    // /** @private */\n    // dropEventParameters: object = {};\n    Diagram.prototype.onDropEventSuccess = function (arg) {\n        var value;\n        var isPhase = false;\n        var orientation;\n        var isConnector;\n        var source = 'sourceElement';\n        var newObj;\n        var node;\n        var conn;\n        isConnector = (this.currentSymbol instanceof Connector) ? true : false;\n        var clonedObject;\n        var id = 'id';\n        var hasTargetArgs = 'hasTarget';\n        clonedObject = cloneObject(this.currentSymbol);\n        clonedObject[hasTargetArgs] = this.currentSymbol[hasTargetArgs];\n        this.removeFromAQuad(this.currentSymbol);\n        this.removeObjectsFromLayer(this.nameTable[this.currentSymbol.id]);\n        this.removeElements(this.currentSymbol);\n        if (this.currentSymbol.shape.isLane ||\n            this.currentSymbol.shape.isPhase) {\n            this.removeChildInNodes(this.currentSymbol);\n        }\n        if (arg.cancel) {\n            removeChildNodes(this.currentSymbol, this);\n        }\n        if (this.currentSymbol.shape.isPhase) {\n            isPhase = true;\n            orientation = this.currentSymbol.shape.orientation;\n        }\n        delete this.nameTable[this.currentSymbol.id];\n        this.currentSymbol = null;\n        this.protectPropertyChange(true);\n        if (!arg.cancel) {\n            this.startGroupAction();\n            if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                if (isPhase) {\n                    clonedObject.shape.isPhase = isPhase;\n                    clonedObject.shape.orientation = orientation;\n                }\n                this.eventHandler.addSwimLaneObject(clonedObject);\n            }\n            var hasTargetArgs_1 = 'hasTarget';\n            if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                && clonedObject[hasTargetArgs_1]) {\n                var nodeId = clonedObject.shape.annotation.nodeId;\n                clonedObject.shape.annotation.id = clonedObject.id;\n                this.addTextAnnotation(clonedObject.shape.annotation, this.nameTable[nodeId]);\n                clonedObject.nodeId = '';\n            }\n            if (!clonedObject.shape.isLane && !isPhase) {\n                if (clonedObject.children) {\n                    this.addChildNodes(clonedObject);\n                }\n                if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(this, arg.target)\n                    && canAllowDrop(arg.target)) {\n                    addChildToContainer(this, arg.target, clonedObject);\n                }\n                else {\n                    value = this.add(clonedObject, true);\n                }\n                if ((clonedObject || value) && canSingleSelect(this)) {\n                    this.select([this.nameTable[clonedObject[id]]]);\n                }\n            }\n        }\n        this.protectPropertyChange(false);\n        newObj = this.nameTable[clonedObject[id]];\n        if (clonedObject[hasTargetArgs]) {\n            clonedObject.nodeId = clonedObject[hasTargetArgs];\n            this.remove(clonedObject);\n        }\n        if (this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n            newObj.processId = clonedObject.processId;\n            this.bpmnModule.dropBPMNchild(this.nameTable[newObj.processId], newObj, this);\n        }\n        this.endGroupAction();\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n        delete this.droppable[source];\n        var selectedSymbols = 'selectedSymbols';\n        remove(this.droppable[selectedSymbols]);\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            _this.dragEnterEvent = { args: args, entryTable: entryTable, selectedSymbol: selectedSymbol, header: header, lane: lane };\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg, _this.successDragEnter.bind(_this));\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg, _this.onDropEventSuccess.bind(_this));\n            }\n            else {\n                var arg = {\n                    source: args.droppedElement,\n                    element: undefined,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: undefined\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo);\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.inEdges.length + node.outEdges.length > 0) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette');\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","state","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","currentSymbol","getObject","indexOf","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","phases","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevChild","laneHeader","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","property","Array","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","PointPort","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","ports","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","template","templatePosition","getAvailableSize","Port","Complex","Connect","defaultValue","isArray","Hyperlink","Annotation","parentObj","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getWrapper","All","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","pointChangeParameter","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","snapConnectorEnd","targetPortId","targetNodeId","onSuccessPointChange","bind","inPort","outPort","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","rotateEventArgs","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","successRotateEvent","rotateSelectedItems","ResizeTool","sizeChangeParameters","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","sizeChangeSuccessCallback","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","content_1","openOn","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","connectionChangeEvent","connectionChange","connectionChangeConnect","selectObjectParameters","onClearSelectionParameters","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","onSuccessCallBack","onFailureCallback","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","successDisconnect","nodeEndId","portEndId","connectionEventChange","successConnectionChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","successConnect","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","selectObjectSuccess","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","onClearSelectionSuccess","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","removeCollectionParameters","renderTimer","textEditEvent","dragEnterEvent","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","updateTemplate","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","hideTooltip","propertyChangeValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","moveNode","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","Clear","onRemoveCollectionChangeSuccess","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","refreshCanvasDiagramLayer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","successTextEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","successDragEnter","swimLaneObj","child1","child2","findChild","onDropEventSuccess","removeChildInNodes","addChildNodes","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","nodesCollection","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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"}