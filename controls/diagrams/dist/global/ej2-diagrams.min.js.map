{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/objects/tooltip.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/connector.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/ruler/ruler.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/appearance.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/interaction/selector.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/core/containers/grid.js","../../src/diagram/objects/node.js","../../src/ruler/ruler.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                    (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                    if (container.rowIndex !== undefined) {\n                        var parent_1 = diagram.nameTable[container.parentId];\n                        if (parent_1.columns.length - 1 === container.columnIndex) {\n                            var x = wrapper.bounds.x;\n                            var y = wrapper.bounds.y;\n                            (wrapper).maxWidth = wrapper.outerBounds.width;\n                            parent_1.wrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width);\n                            diagram.drag(parent_1, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                            diagram.updateDiagramObject(parent_1);\n                        }\n                    }\n                    else {\n                        diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                    }\n                }\n                if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                    (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                    if (container.rowIndex !== undefined) {\n                        var contai = diagram.nameTable[container.parentId];\n                        var x = wrapper.bounds.x;\n                        var y = wrapper.bounds.y;\n                        (wrapper).maxHeight = wrapper.outerBounds.height;\n                        contai.wrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height);\n                        diagram.drag(contai, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                    }\n                    else {\n                        diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                    }\n                }\n            }\n            else if (container.container.type === 'Canvas') {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                diagram.deleteChild(obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.select([obj]);\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: 'red' }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    parentNode.wrapper.measure(new Size());\n    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node) {\n    if (!diagram.currentSymbol) {\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            if (node.parentId !== '') {\n                diagram.deleteChild(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            var entry = {\n                type: 'ChildCollectionChanged', category: 'Internal',\n                undoObject: undoObj, redoObject: cloneObject(node)\n            };\n            diagram.addHistoryEntry(entry);\n            diagram.updateDiagramObject(container);\n        }\n    }\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var orientation = node.shape.orientation === 'Horizontal' ? true : false;\n    if (node.shape.header) {\n        createRow(row, node.shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    var index = 0;\n    if (node.shape.header) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (node.shape.phases.length > 0) {\n        phaseDefine(grid, diagram, node, index, orientation);\n        index++;\n    }\n    if (node.shape.lanes.length > 0) {\n        for (var k = 0; k < node.shape.lanes.length; k++) {\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader) {\n    var node = new Node(parent, 'nodes', object);\n    node.parentId = grid.id;\n    if (isHeader) {\n        node.isHeader = true;\n    }\n    diagram.initObject(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n        }\n    }\n    return node.wrapper;\n}\n// /** @private */\n// export function addGridObject(\n//     diagram: Diagram, grid: Grid, object: NodeModel, isHeader?: boolean, rowValue?: number, colValue?: number,\n//     nodeObj?: NodeModel, orientation?: boolean, lanesNo?: number): void {\n//     let node: Node = new Node(object, 'nodes', { container: { type: 'Canvas', orientation: 'Horziontal' } });\n//     diagram.initObject(node as IElement);\n//     node.parentId = grid.id;\n//     if (isHeader) {\n//         (node as Node).isHeader = true;\n//     }\n//     diagram.nodes.push(node);\n//     let canvas: Container = node.wrapper;\n//     node.rowIndex = rowValue; node.columnIndex = colValue;\n//     canvas.children = [];\n//     if (nodeObj) {\n//         if (lanesNo !== undefined) {\n//             orientation ? canvas.verticalAlignment = 'Stretch' : canvas.horizontalAlignment = 'Stretch';\n//             canvas.relativeMode = 'Object';\n//             if (orientation) {\n//                 nodeObj.width = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             } else {\n//                 nodeObj.height = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             }\n//         }\n//         let node: Node = new Node(object, 'nodes', nodeObj);\n//         node.parentId = grid.id;\n//         node.rowIndex = rowValue; node.columnIndex = colValue;\n//         if (isHeader) {\n//             (node as Node).isHeader = true;\n//         }\n//         diagram.initObject(node);\n//         if (lanesNo === undefined) {\n//             if (isHeader) {\n//                 node.wrapper.horizontalAlignment = 'Stretch';\n//             } else {\n//                 orientation ? node.wrapper.horizontalAlignment = 'Stretch' : node.wrapper.verticalAlignment = 'Stretch';\n//             }\n//             canvas.horizontalAlignment = node.wrapper.horizontalAlignment;\n//             canvas.verticalAlignment = node.wrapper.verticalAlignment;\n//             canvas.relativeMode = node.wrapper.relativeMode = 'Object';\n//         } else {\n//             orientation ? node.wrapper.verticalAlignment = 'Stretch' : node.wrapper.horizontalAlignment = 'Stretch';\n//             node.wrapper.relativeMode = 'Object';\n//         }\n//         if (node.wrapper.children.length > 0) {\n//             for (let i: number = 0; i < node.wrapper.children.length; i++) {\n//                 let child: DiagramElement = node.wrapper.children[i];\n//                 if (child instanceof DiagramElement) {\n//                     child.isCalculateDesiredSize = false;\n//                 }\n//             }\n//         }\n//         canvas.children.push(node.wrapper);\n//     }\n//     grid.addObject(canvas, rowValue, colValue, 1, (isHeader) ? grid.columnDefinitions().length : 1);\n// }\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var node = {\n        annotations: [{ content: object.shape.header.content.content }],\n        style: object.shape.header.style,\n        rowIndex: 0, columnIndex: 0,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation) {\n    var rowValue = 0;\n    var colValue = 0;\n    for (var k = 0; k < object.shape.phases.length; k++) {\n        if (orientation) {\n            colValue = k;\n            rowValue = indexValue;\n        }\n        else {\n            rowValue = object.shape.header ? k + 1 : k;\n        }\n        var phaseObject = {\n            annotations: [{\n                    content: object.shape.phases[k].header.content.content,\n                    rotateAngle: orientation ? 0 : 270\n                }],\n            style: object.shape.phases[k].style,\n            rowIndex: rowValue, columnIndex: colValue,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var wrapper = addObjectToGrid(diagram, grid, object, phaseObject);\n        grid.addObject(wrapper, rowValue, colValue);\n    }\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var value = object.shape.phases.length || 1;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : 1;\n    var phaseCount = object.shape.phases.length > 0 ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        var canvas = {\n            id: object.shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            style: object.shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var parentWrapper = addObjectToGrid(diagram, grid, object, canvas);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            var laneNode = void 0;\n            laneNode = {\n                id: object.shape.lanes[laneIndex].id + '_header',\n                style: object.shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: object.shape.lanes[laneIndex].header.content.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            (orientation) ? laneNode.width = object.shape.lanes[laneIndex].header.width :\n                laneNode.height = object.shape.lanes[laneIndex].header.width;\n            var childWrapper = addObjectToGrid(diagram, grid, object, laneNode);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n// /** @private */\n// export function laneDefine(\n//     grid: Grid, diagram: Diagram, object: NodeModel, indexValue: number, laneIndex: number, orientation: boolean): void {\n//     let value: number = orientation ? grid.columnDefinitions().length : (object.shape as SwimLaneModel).phases.length || 1;\n//     let colValue: number = 0;\n//     let rowValue: number = 0;\n//     let phaseLength: number = (object.shape as SwimLaneModel).phases.length > 0 ? 1 : 0;\n//     rowValue = orientation ? indexValue : 1;\n//     for (let l: number = 0; l < value; l++) {\n//         colValue = orientation ? l : laneIndex + phaseLength;\n//         let node: NodeModel = {\n//             style: (object.shape as SwimLaneModel).lanes[laneIndex].style, width: object.width, height: object.height\n//         };\n//         addGridObject(diagram, grid, object, false, orientation ? rowValue : rowValue, colValue);\n//         if (l === 0) {\n//             let laneNode: NodeModel;\n//             laneNode = {\n//                 id: (object.shape as SwimLaneModel).lanes[laneIndex].id,\n//                 style: (object.shape as SwimLaneModel).lanes[laneIndex].header.style,\n//                 annotations: [{\n//                     content: (object.shape as SwimLaneModel).lanes[laneIndex].header.content.content,\n//                     rotateAngle: orientation ? 270 : 0\n//                 }],\n//                 container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n//             };\n//             addGridObject(diagram, grid, object, false, rowValue, orientation ? 0 : colValue, laneNode, orientation, laneIndex);\n//         }\n//         if (!orientation) {\n//             rowValue++;\n//         }\n//         colValue = orientation ? l : laneIndex + 1;\n//     }\n// }\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (object.shape.phases.length > 0) {\n            totalHeight += object.shape.phases[0].height;\n            createRow(row, object.shape.phases[0].height);\n        }\n        if (object.shape.lanes.length > 0) {\n            for (var i = 0; i < object.shape.lanes.length; i++) {\n                height = object.shape.lanes[i].height;\n                totalHeight += height;\n                if (i === object.shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (object.shape.phases.length > 0) {\n            for (var i = 0; i < object.shape.phases.length; i++) {\n                height = object.shape.phases[i].offset;\n                totalHeight += height;\n                if (i === object.shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    if (object.shape.phases.length > 0 && object.shape.orientation === 'Horizontal') {\n        for (var j = 0; j < object.shape.phases.length; j++) {\n            totalWidth += object.shape.phases[j].offset;\n            var cols = createColumn(object.shape.phases[j].offset);\n            if (j === object.shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        var value = object.shape.phases.length > 0 ? object.shape.lanes.length\n            + 1 : object.shape.lanes.length;\n        for (var j = 0; j < value; j++) {\n            if (j === 0 && object.shape.phases.length > 0) {\n                totalWidth += object.shape.phases[0].height;\n                var cols = createColumn(object.shape.phases[0].height);\n                columns.push(cols);\n            }\n            else {\n                totalWidth += object.shape.lanes[0].height;\n                var cols = createColumn(object.shape.lanes[0].height);\n                if (j === object.shape.lanes.length && totalWidth < object.width) {\n                    cols.width += object.width - totalWidth;\n                }\n                columns.push(cols);\n            }\n        }\n    }\n    else {\n        var cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n//#end region\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints, ElementAction } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n            actualObject.wrapper.children[0].canMeasurePath = true;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID || !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n        else {\n            connector.sourcePoint = source;\n            connector.targetPoint = target;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (child instanceof TextElement || (child.elementActions && ElementAction.ElementIsPort)) {\n                child.flip = flip;\n            }\n            if (!(child instanceof Canvas) && !(child instanceof Container) && !(child.elementActions && ElementAction.ElementIsPort)) {\n                var childX = ((offsetX - child.offsetX) + offsetX);\n                var childY = ((offsetY - child.offsetY) + offsetY);\n                if (flip === 'Horizontal') {\n                    child.flipOffset.x = childX - child.actualSize.width / 2;\n                }\n                else if (flip === 'Vertical') {\n                    child.flipOffset.y = childY - child.actualSize.height / 2;\n                }\n                else if (flip === 'Both') {\n                    child.flipOffset.x = childX - child.actualSize.width / 2;\n                    child.flipOffset.y = childY - child.actualSize.height / 2;\n                }\n            }\n            else if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, flip);\n            }\n        }\n    }\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\nimport { alignElement } from '../../utility/diagram-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n            alignElement(this, this.offsetX, this.offsetY, this.flip);\n        }\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { alignElement } from '../../utility/diagram-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n            alignElement(this, this.offsetX, this.offsetY, this.flip);\n        }\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].minWidth = row.cells[j].desiredCellWidth;\n                        }\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            row.cells[j].desiredCellHeight += (this.height - calculateHeight);\n                            if (row.cells[j].children && row.cells[j].children.length) {\n                                row.cells[j].children[0].minHeight = row.cells[j].desiredCellHeight;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height) {\n        var row = this.rows[rowId];\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].minHeight = height;\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width) {\n        if (this.width !== undefined) {\n            this.width += width - this.rows[0].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].minWidth = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            this.rowDefns.push(rowDefn);\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            defaultCell.width = this.width;\n            var columns = this.colDefns;\n            this.addCellInRow(columns, rowDefn, row);\n            if (rowId > this.rows.length - 1) {\n                this.rows.push(row);\n            }\n            else {\n                this.rows.splice(rowId, 0, row);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, columns) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            var rowDefn = this.rowDefns[i];\n            for (var j = 0; j < columns.length; j++) {\n                var colDefn = columns[j];\n                var cell = new GridCell();\n                cell.style = this.cellStyle;\n                cell.desiredCellWidth = colDefn.width;\n                cell.desiredCellHeight = rowDefn.height;\n                if (columnId > row.cells.length - 1) {\n                    row.cells.push(cell);\n                }\n                else {\n                    row.cells.splice(columnId, 0, cell);\n                }\n                this.children.push(cell);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            var cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            var j = 0;\n            var i = 0;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                for (var i_1 = 0; i_1 < this.rows.length; i_1++) {\n                    var row = this.rows[i_1];\n                    for (var j_1 = 0; j_1 < row.cells.length; j_1++) {\n                        var cell = row.cells[j_1];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            var k = void 0;\n                            var z = void 0;\n                            for (k = i_1, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                var removeCelll = this.rows[k + 1].cells[j_1];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCelll), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from '../interaction/container-interaction';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"childNodes\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"height\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"width\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property('10')\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], SwimLane.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        angle = (element.flip === 'Horizontal' || element.flip === 'Vertical') ? -element.parentTransform : element.parentTransform;\n        nativeElement.setAttribute('transform', 'rotate(' + angle + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        var pathAngle = (options.flip === 'Horizontal' || options.flip === 'Vertical') ? -options.angle : options.angle;\n        options.angle = pathAngle;\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        var nativEAngle = (options.flip === 'Horizontal' || options.flip === 'Vertical') ? -options.angle : options.angle;\n        options.angle = nativEAngle;\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            options.angle = -options.angle;\n        }\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        var imageAngle = (options.flip === 'Horizontal' || options.flip === 'Vertical') ? -options.angle : options.angle;\n        options.angle = imageAngle;\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n                if (child instanceof TextElement && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n            }\n            this.renderFlipElement(group, canvas, group.flip);\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var node = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                    this.commandHandler.dropChildToContainer(this.currentTarget, node);\n                    this.commandHandler.renderContainerHelper(node);\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                if (!this.commandHandler.isParentAsContainer((args.source instanceof Selector) ? args.source.nodes[0] : args.source, true)) {\n                    this.commandHandler.drawHighlighter(this.currentTarget);\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter } from './container-interaction';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var hasStack = this.updateContainerProperties();\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                    if (hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (this.diagram.selectedObject.helperObject) {\n                    var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    var obj = this.diagram.selectedObject.actualObject;\n                    this.diagram.updateDiagramObject(obj);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                    updateCanvasBounds(this.diagram, obj, this.eventArgs.position, boundsUpdate);\n                    this.diagram.updateSelector();\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var hasGroup;\n        if (this.diagram.selectedObject.helperObject) {\n            helperObject = this.diagram.selectedObject.helperObject;\n            this.diagram.selectedItems.wrapper.children[0].offsetX = helperObject.wrapper.offsetX;\n            this.diagram.selectedItems.wrapper.children[0].offsetY = helperObject.wrapper.offsetY;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.width = helperObject.wrapper.actualSize.width;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.height = helperObject.wrapper.actualSize.height;\n            var obj = this.diagram.selectedObject.actualObject;\n            obj.offsetX = helperObject.offsetX;\n            obj.offsetY = helperObject.offsetY;\n            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                obj.width = helperObject.width;\n                obj.height = helperObject.height;\n            }\n            obj.rotateAngle = helperObject.rotateAngle;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            var undoElement = void 0;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                this.diagram.startGroupAction();\n                hasGroup = true;\n            }\n            if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                undoElement = {\n                    targetIndex: undefined, target: undefined,\n                    sourceIndex: index, source: clone(obj)\n                };\n                if (index > -1) {\n                    var children = parentNode.children;\n                    children.splice(children.indexOf(obj.id), 1);\n                    this.diagram.nameTable[obj.id].parentId = '';\n                    hasStack = true;\n                    parentNode.wrapper.children.splice(index, 1);\n                }\n            }\n            moveChildInStack(obj, target, this.diagram, this.action);\n            parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                (this.diagram.nameTable[obj.parentId] || obj);\n            if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.wrapper.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                parentNode.wrapper.maxHeight = parentNode.wrapper.actualSize.height;\n                isChangeProperties = true;\n            }\n            if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                checkChildNodeInContainer(this.diagram, obj);\n            }\n            else {\n                if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                    var container = ((parentNode.shape.type === 'SwimLane') ?\n                        parentNode.wrapper.children[0] : parentNode.wrapper);\n                    var x = parentNode.wrapper.bounds.x;\n                    var y = parentNode.wrapper.bounds.y;\n                    if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' && obj.rowIndex === 1) ||\n                        (parentNode.container.orientation === 'Vertical' && obj.rowIndex > 0 && obj.columnIndex > 0)) {\n                        container.updateColumnWidth(obj.columnIndex, helperObject.width);\n                    }\n                    else if (obj.rowIndex !== undefined) {\n                        container.updateRowHeight(obj.rowIndex, helperObject.height);\n                    }\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                        width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY,\n                        width: obj.width, height: obj.height,\n                        rotateAngle: obj.rotateAngle\n                    });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            if (isChangeProperties) {\n                parentNode.maxWidth = undefined;\n                parentNode.wrapper.maxWidth = undefined;\n                parentNode.maxHeight = undefined;\n                parentNode.wrapper.maxHeight = undefined;\n            }\n            if (hasStack) {\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    width: parentNode.width, height: parentNode.height,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                var entry = {\n                    type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.diagram.addHistoryEntry(entry);\n                }\n            }\n        }\n        return hasGroup;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper, findBounds } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    if (checkParentAsContainer(this.diagram, selectorModel.nodes[0], true)) {\n                        var parentNode = this.diagram.nameTable[selectorModel.nodes[0].parentId];\n                        if (parentNode && parentNode.container.type === 'Grid') {\n                            var canvas = new Canvas();\n                            canvas.children = [];\n                            var element = new DiagramElement();\n                            if (selectorModel.nodes[0].rowIndex && selectorModel.nodes[0].rowIndex > 0) {\n                                if ((parentNode.container.orientation === 'Horizontal' && selectorModel.nodes[0].rowIndex === 1) ||\n                                    (parentNode.container.orientation === 'Vertical' &&\n                                        selectorModel.nodes[0].rowIndex > 0 && selectorModel.nodes[0].columnIndex > 0)) {\n                                    var bounds = findBounds(parentNode, selectorModel.nodes[0].columnIndex, true);\n                                    canvas.offsetX = bounds.center.x;\n                                    canvas.offsetY = bounds.center.y;\n                                    element.width = bounds.width;\n                                    element.height = bounds.height;\n                                }\n                                else {\n                                    canvas.offsetX = parentNode.offsetX;\n                                    canvas.offsetY = selectorModel.nodes[0].wrapper.offsetY;\n                                    element.width = parentNode.wrapper.actualSize.width;\n                                    element.height = selectorModel.nodes[0].wrapper.actualSize.height;\n                                }\n                            }\n                            canvas.children.push(element);\n                            canvas.measure(new Size());\n                            canvas.arrange(canvas.desiredSize);\n                            selectorModel.wrapper.children[0] = canvas;\n                        }\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n        }\n        if (source && target && source.parentId && target.parentId && (source.parentId === target.parentId)\n            && (source.id !== target.id) && (this.diagram.nameTable[target.parentId].container &&\n            this.diagram.nameTable[target.parentId].container.type === 'Stack')) {\n            var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n            renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child = selector.nodes[0];\n                if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child.rowIndex > 0 && child.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = node.wrapper.children[0];\n                                var child_1 = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                                this.select(this.diagram.nameTable[child_1.children[0].children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = void 0;\n                                var child_2;\n                                wrapper = node.wrapper.children[0];\n                                child_2 = wrapper.rows[wrapper.rows.length - 1].cells[wrapper.rows[wrapper.rows.length - 1].cells.length - 1];\n                                this.select(this.diagram.nameTable[child_2.children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (selector.nodes[0].shape.type === 'SwimLane') {\n                    node = selector.nodes[0];\n                    var wrapper = void 0;\n                    var child = void 0;\n                    var index = void 0;\n                    if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Vertical')) {\n                        wrapper = node.wrapper.children[0];\n                        child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if (corner === 'ResizeEast') {\n                        wrapper = node.wrapper.children[0];\n                        index = (selector.nodes[0].shape.header) ? 1 : 0;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Horizontal')) {\n                        wrapper = node.wrapper.children[0];\n                        index = wrapper.rows.length - 1;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer } from './interaction/container-interaction';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_1 = this.nameTable[obj.parentId];\n                        parent_1.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_1.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_1.wrapper.measure(new Size());\n                        parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_1);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (obj.id !== 'helper') {\n                            this.triggerEvent(DiagramEvent.collectionChange, args);\n                        }\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                this.updateDiagramObject(parentNode);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                    }\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        if (canvas instanceof GridPanel) {\n            canvas.arrange(canvas.desiredSize, true);\n        }\n        else {\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.shape.type === 'SwimLane') {\n            var nodesCollection = [];\n            var rowvalue = void 0;\n            var orientation_1 = obj.shape.orientation === 'Horizontal' ? true : false;\n            if (orientation_1) {\n                rowvalue = (obj.shape.header ? 1 : 0)\n                    + (obj.shape.phases.length > 0 ? 1 : 0);\n            }\n            else {\n                rowvalue = (obj.shape.header ? 1 : 0);\n            }\n            var columnValue = void 0;\n            if (orientation_1) {\n                columnValue = 0;\n            }\n            else {\n                columnValue = obj.shape.phases.length > 0 ? 1 : 0;\n            }\n            var grid = obj.wrapper.children[0];\n            if (obj.shape.lanes.length > 0) {\n                for (var i = 0; i < obj.shape.lanes.length; i++) {\n                    for (var j = 0; j < obj.shape.lanes[i].childNodes.length; j++) {\n                        var node = obj.shape.lanes[i].childNodes[j];\n                        node.parentId = grid.rows[rowvalue].cells[columnValue].children[0].id;\n                        this.initObject(node);\n                        this.nodes.push(node);\n                        nodesCollection.push(node);\n                        var canvas_1 = node.wrapper;\n                        if (orientation_1) {\n                            columnValue = 0;\n                        }\n                        if (orientation_1 && canvas_1.actualSize.width + canvas_1.margin.left > grid.rows[rowvalue].cells[0].actualSize.width) {\n                            columnValue++;\n                            canvas_1.margin.left = canvas_1.margin.left - grid.rows[rowvalue].cells[0].actualSize.width;\n                        }\n                        canvas_1.measure(new Size(node.width, node.height));\n                        canvas_1.arrange(canvas_1.desiredSize);\n                        grid.rows[rowvalue].cells[columnValue].children[0].children.push(canvas_1);\n                    }\n                    orientation_1 ? rowvalue++ : columnValue++;\n                }\n            }\n            grid.measure(new Size(obj.width, obj.height));\n            grid.arrange(canvas.desiredSize);\n            for (var i = 0; i < nodesCollection.length; i++) {\n                nodesCollection[i].offsetX = nodesCollection[i].wrapper.offsetX;\n                nodesCollection[i].offsetY = nodesCollection[i].wrapper.offsetY;\n            }\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (!(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                        var stack = selectorModel.nodes[0];\n                        if (stack.shape.type !== 'UmlClassifier' && (!(stack.parentId || this.nameTable[stack.parentId]\n                            && this.nameTable[stack.parentId].shape.type === 'UmlClassifier'))) {\n                            selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                            var stackPanel = selectorModel.nodes[0];\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_2 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_2.children) {\n                        for (var _i = 0, _a = parent_2.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions && ElementAction.ElementIsGroup) {\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_3 = this.nameTable[actualObject.parentId];\n                    parent_3.wrapper.measure(new Size(parent_3.wrapper.width, actualObject.wrapper.height));\n                    parent_3.wrapper.arrange(parent_3.wrapper.desiredSize);\n                    parent_3.offsetX = parent_3.wrapper.offsetX;\n                    parent_3.offsetY = parent_3.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        newNode = _this.add(group);\n                                    }\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = child2.width / 2;\n                                    lane.offsetY = (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = child1.width / 2;\n                                header.offsetY = child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    if (arg.target && (arg.target instanceof Node) && checkParentAsContainer(_this, arg.target)\n                        && canAllowDrop(arg.target)) {\n                        addChildToContainer(_this, arg.target, clonedObject);\n                    }\n                    else {\n                        _this.add(clonedObject, true);\n                    }\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size } from '../index';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode;\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (actualObject.parentId) {\n            parentNode = diagram.nameTable[actualObject.parentId];\n            parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n            parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n        }\n        if (entryObject.parentId !== '') {\n            parentNode = diagram.nameTable[entryObject.parentId];\n            parentNode.children.push(entryObject.id);\n            parentNode.wrapper.children.push(actualObject.wrapper);\n        }\n        actualObject.parentId = entryObject.parentId;\n        diagram.updateDiagramObject(actualObject);\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.content.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data =\n                            'M' + 20 + ',' + (laneHeight / 2) + ' L' + (laneWidth - 20) + ',' + (laneHeight / 2) + 'z';\n                    }\n                    else {\n                        symbol.shape.data =\n                            'M' + (laneWidth / 2) + ',' + 20 + ' L' + (laneWidth / 2) + ',' + (laneHeight - 20) + 'z';\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = isLane ? this.laneTable[obj.id].width :\n                        this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = isLane ? this.laneTable[obj.id].height :\n                        this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","state","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","verticalAlignment","horizontalAlignment","initObject","nodes","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","checkParentAsContainer","nameTable","parentId","rowIndex","parent_1","columns","columnIndex","updateColumnWidth","drag","updateDiagramObject","scale","contai","maxHeight","updateRowHeight","undoObj","cloneObject","clearSelection","deleteChild","entry","category","undoObject","redoObject","addHistoryEntry","select","findBounds","isHeader","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","renderContainerHelper","selectedObject","helperObject","connectors","actualObject","selectedItems","minWidth","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","Size","arrange","desiredSize","addChildToContainer","parent","currentSymbol","indexOf","addChild","renderStackHighlighter","isVertical","isUml","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","commandHandler","initSwimLane","grid","row","header","createRow","initGridRow","initGridColumns","setDefinitions","index","headerDefine","phases","phaseDefine","lanes","k","laneCollection","addObjectToGrid","DiagramElement","isCalculateDesiredSize","addObject","columnDefinitions","indexValue","rowValue","colValue","laneIndex","phaseCount","parentWrapper","laneNode","childWrapper","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","totalWidth","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","removeFromAQuad","removeObjectsFromLayer","serialize","clonedObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","TextElement","refreshTextElement","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","Text","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","Canvas","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","getNativeLayer","getHTMLLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","PointPort","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","conn","connectorEditingToolModule","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","None","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","alignElement","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","template","templatePosition","getAvailableSize","canMeasure","textNodes","textWrapBounds","imageSource","stretch","leftMargin","topMargin","isStack","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","defaultValue","isArray","Hyperlink","Annotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","UserHandle","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","GridPanel","childTable","cellStyle","desiredRowHeight","desiredCellWidth","colDefns","rowId","columnId","rowSpan","columnSpan","cell","GridCellItem","addObjectToCell","updateProperties","rowDefns","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","desiredCellHeight","calculateSize","calculateHeight","calculateWidth","colId","addRow","addColumn","removeRow","removeColumn","updateRowIndex","currentIndex","newIndex","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","i_1","z","removeCelll","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","UmlActivityShape","UmlClassifierShape","SwimLane","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","isCanvasUpdate","processId","umlIndex","outEdges","inEdges","isLane","isPhase","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","updatePortEdges","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","Header","Lane","Phase","ChildContainer","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","option","pathSize","newData","pathColor","pathAngle","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","nativEAngle","imageAngle","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","endGroupAction","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","elements","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","hasStack","updateContainerProperties","addUmlNode","boundsUpdate","renderSelector","click","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","removeElements","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","hasGroup","isChangeProperties","UndoRedo","innerNode","zIndex","updateConnectorEdges","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyManager","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","highlighter","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","child_2","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","currentObj","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","element_1","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","nodesCollection","rowvalue","orientation_1","columnValue","canvas_1","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","updateGridContainer","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","isLayout","existingBounds","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","isMeasure","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","lane","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","swimLaneObj","laneObj","child1","child2","findChild","addChildNodes","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","innerHTML","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","initSymbols","symbolGroup","laneHeight","laneWidth","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}