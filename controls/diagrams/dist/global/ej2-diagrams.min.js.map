{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/interaction/line-routing.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if (checkParentAsContainer(diagram, object) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.connectors.length === 0)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            var undoObj = cloneObject(shape.lanes[laneIndex]);\n            removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                    redoObject: cloneObject(lane), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            shape.lanes.splice(laneIndex, 1);\n            var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                (findStartLaneIndex(swimLane) + laneIndex);\n            if (shape.orientation === 'Horizontal') {\n                row = grid.rows[index];\n                for (i = 0; i < row.cells.length; i++) {\n                    cell = row.cells[i];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeRow(index);\n            }\n            else {\n                swimLane.width = (swimLane.width !== undefined) ?\n                    swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                for (i = 0; i < grid.rows.length; i++) {\n                    cell = grid.rows[i].cells[index];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeColumn(index);\n            }\n            swimLane.width = swimLane.wrapper.width = grid.width;\n            swimLane.height = swimLane.wrapper.height = grid.height;\n            swimLaneMeasureAndArrange(swimLane);\n            ChangeLaneIndex(diagram, swimLane, index);\n            diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        obj.offsetX = helperObject.offsetX;\n                        obj.offsetY = helperObject.offsetY;\n                        if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                            obj.width = helperObject.width;\n                            obj.height = helperObject.height;\n                        }\n                        obj.rotateAngle = helperObject.rotateAngle;\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : arg.oldValue,\n                newValue: this.getSelectedObject(), cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, oldValues, { rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        node.offsetX += offsetX;\n                        node.offsetY += offsetY;\n                        node.width += width;\n                        node.height += height;\n                        node.rotateAngle += rotateAngle;\n                        this.diagram.nodePropertyChange(node, {}, {\n                            offsetX: node.offsetX, offsetY: node.offsetY,\n                            width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                        });\n                        objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.nodes[index],\n                                newValue: newProp.nodes[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.connectors[index],\n                                newValue: newProp.connectors[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = { element: this, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            this.historyManager.startGroupAction();\n            if (!this.nameTable[node.id]) {\n                var getDefaults = getFunction(this.getNodeDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(node, this);\n                    node.offsetX = (defaults && defaults.width) || node.offsetX / 2;\n                    node.offsetY = (defaults && defaults.height) || node.offsetY / 2;\n                }\n                node.offsetX = (node.width || 50) / 2;\n                node.offsetY = (node.height || 50) / 2;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                var laneId = swimLane + lane + i;\n                if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                    var laneNode = this.nameTable[laneId].wrapper.bounds;\n                    var focusPoint = {\n                        x: laneNode.x + (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                        y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                    };\n                    if (swimlaneNode.shape.orientation === 'Horizontal') {\n                        focusPoint.y = laneNode.y;\n                    }\n                    else {\n                        focusPoint.x = laneNode.x;\n                        var laneHeaderId = this.nameTable[laneId].parentId +\n                            swimlaneNode.shape.lanes[0].id + '_0_header';\n                        focusPoint.y = laneNode.y +\n                            (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                node.margin.top + (node.wrapper.bounds.height / 2));\n                    }\n                    if (laneNode.containsPoint(focusPoint) ||\n                        (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                        addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                        updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                        break;\n                    }\n                }\n            }\n            this.historyManager.endGroupAction();\n            this.protectPropertyChange(false);\n        }\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            if (nodes_1.length > 0) {\n                this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n            }\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            var updatedNodes = nodes;\n            for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                var obj = updatedNodes_1[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                var conn = _b[_a];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldObject, newValue: node };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ?\n                        this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: args.droppedElement,\n                    element: undefined,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: undefined\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'];\n        var top = diagram.spatialSearch['pageTop'];\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        this.updateNodesInVirtualRegion(diagram.nodes);\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.offsetX, y: this.startNode.offsetY } :\n                    { x: this.targetNode.offsetX, y: this.targetNode.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            if (!sourcePortID && this.startNode) {\n                for (var i = sourceLeft.gridX; i <= sourceRight.gridX; i++) {\n                    grid = this.gridCollection[i][sourceLeft.gridY];\n                    if (grid.nodeId.length === 1) {\n                        this.sourceGridCollection.push(grid);\n                    }\n                }\n                for (var i = sourceTop.gridY; i <= sourceBottom.gridY; i++) {\n                    grid = this.gridCollection[sourceTop.gridX][i];\n                    if (grid.nodeId.length === 1 && this.sourceGridCollection.indexOf(grid) === -1) {\n                        this.sourceGridCollection.push(grid);\n                    }\n                }\n            }\n            else {\n                this.sourceGridCollection.push(this.startGrid);\n            }\n            if (!targetPortID && this.targetNode) {\n                for (var i = targetLeft.gridX; i <= targetRight.gridX; i++) {\n                    grid = this.gridCollection[i][targetLeft.gridY];\n                    if (grid.nodeId.length === 1) {\n                        this.targetGridCollection.push(grid);\n                    }\n                }\n                for (var i = targetTop.gridY; i <= targetBottom.gridY; i++) {\n                    grid = this.gridCollection[targetTop.gridX][i];\n                    if (grid.nodeId.length === 1 && this.targetGridCollection.indexOf(grid) === -1) {\n                        this.targetGridCollection.push(grid);\n                    }\n                }\n                if (this.targetGridCollection.indexOf(this.targetGrid) === -1) {\n                    if (this.targetGrid.nodeId.length > 1 && this.targetGridCollection.length === 1) {\n                        this.targetGrid = this.targetGridCollection[0];\n                    }\n                }\n            }\n            else {\n                this.targetGridCollection.push(this.targetGrid);\n            }\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours);\n            this.neigbour(startGrid, 'right', neigbours);\n            this.neigbour(startGrid, 'bottom', neigbours);\n            this.neigbour(startGrid, 'left', neigbours);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && this.sourceGridCollection.indexOf(nearGrid) === -1) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canEnableRouting","state","LineRouting","InheritLineRouting","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","currentSymbol","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","phases","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","prevChild","phaseRowIndex","prevHeight","laneHeader","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","property","Array","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","PointPort","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","ports","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","template","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","templatePosition","getAvailableSize","Port","Complex","Connect","defaultValue","isArray","Hyperlink","Annotation","parentObj","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getWrapper","All","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelectedNodeProperties","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","content_1","openOn","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","isBlazor","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","addNodeToLane","getDefaults","defaults","laneId","hideTooltip","propertyChangeValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","moveNode","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","nodesCollection","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","swimLaneObj","child1","child2","findChild","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","startGridNode","getIntermediatePoints","updateConnectorSegments","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","neigbours","findNearestNeigbours","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","layoutInfo","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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"}